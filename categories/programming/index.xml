<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Programming on HzChris</title>
    <link>https://hzchirs.github.io/murmur/categories/programming/</link>
    <description>Recent content in Programming on HzChris</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>zh-tw</language>
    <copyright>Copyright © 2023 by HzChris</copyright>
    <lastBuildDate>Sat, 16 Jun 2018 11:43:14 +0800</lastBuildDate><atom:link href="https://hzchirs.github.io/murmur/categories/programming/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>CiricleCI Workflow: 讓 build 時間減少 50% 的設定心得</title>
      <link>https://hzchirs.github.io/murmur/post/boost-ci-build-with-circleci-workflow/</link>
      <pubDate>Sat, 16 Jun 2018 11:43:14 +0800</pubDate>
      
      <guid>https://hzchirs.github.io/murmur/post/boost-ci-build-with-circleci-workflow/</guid>
      <description>&lt;p&gt;&lt;img src=&#34;https://cdn-images-1.medium.com/max/2000/1*ZHsy56SNDn4lLwajoKyeAA.jpeg&#34; alt=&#34;fly-to-the-moon&#34;&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://statementdog.com/&#34;&gt;財報狗&lt;/a&gt;用 CircleCI 有一段時間了，一開始用的時候還是 1.0，
2.0 還在 beta 階段。我們的專案在 1.0 上面一直運作良好，所以也沒有想說要換，直到
CircleCI 發佈 2018/8/31 之後將不再支援 1.0，我們才開始考慮要遷移專案 XD，順便趁着這次
的遷移導入的 2.0 的新功能: &lt;a href=&#34;https://circleci.com/docs/2.0/workflows/&#34;&gt;&lt;strong&gt;workflow&lt;/strong&gt;&lt;/a&gt;。&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>如何在 PostgreSQL 中找出連續日期</title>
      <link>https://hzchirs.github.io/murmur/post/how-to-find-consecutive-dates-in-postgresql/</link>
      <pubDate>Sat, 12 May 2018 22:07:56 +0800</pubDate>
      
      <guid>https://hzchirs.github.io/murmur/post/how-to-find-consecutive-dates-in-postgresql/</guid>
      <description>&lt;p&gt;工作上需要從資料庫找出使用者連續上站天數，
找了一些相關的資源，其實解法相當多，但大多都是 SQL Server 的解法，
從中找了一個比較&lt;a href=&#34;https://stackoverflow.com/questions/20402089/detect-consecutive-dates-ranges-using-sql&#34;&gt;簡單優雅的&lt;/a&gt;
來研究，並修改成 &lt;a href=&#34;http://www.sqlfiddle.com/#!17/3e264/24/0&#34;&gt;PostgreSQL 的版本&lt;/a&gt;。&lt;/p&gt;
&lt;p&gt;在接下來的說明中，會產生一個最簡單，單純只有時間序列的 table，並用這個 table 來
一步步說明實現方式。&lt;/p&gt;</description>
    </item>
    
  </channel>
</rss>
